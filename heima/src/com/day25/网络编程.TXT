网络编程
计算机和计算机之间相互通信

常见的软件架构
C/S:client/server---客户端/服务器
在用户的本地，用户体验好
开发难度比较大。客户端服务器端
维护也比较麻烦

B/S:Browser/server  浏览器/服务器  依靠网址
优缺点
1、不需要开发客户端，只要页面+服务器端
2、不用下载，打开网址
3、用户太多对服务器产生的影响比较大以及用户体验
总结就是比较方便，对用户或者开发人员都，但是

网络编程三要素
1、IP： 设备在网络中的地址，是唯一的标识、
2、端口号： 应用程序在设备中的唯一标识
2、协议：就是是数据在网络中的传输规则，常见的有UDP、TCP、HTTP、HTTPS、FTP等



IPV4 32位四个字节  点分十进制 只有43亿个ip（不够用）




IPV6 128位 八个字节 冒分十六进制 可将零开头的省略 0034---34
特殊情况有多个连续的零  -----零位压缩表示法

ip
分为公网IP，和局域网--局域网（就是用来节省IP的）

特殊的IP 127.0.0.0--localhost：是回送地址也称本地回环地址，也叫本机IP  发送数据不经过路由器
cmd--ipconfig   ping


inetAddress的使用




端口号: 取值范围0~65535  其中0~1023之间的端口用于一些知名的网络服务或者应用
我们一般使用1024以上的端口
一个端口号只能被一个应用程序使用


协议:数据传输的规则
OSI参考模型是理想型没有推广(七层)

TCP/IP参考模型,国际标准



UDP协议:用户数据报协议(不连接直接发送)
特点:面向无连接通信协议,速度快,有大小限制(一次最多发送64k),数据不安全,容易丢失
应用场景:数据丢失没有太大的影响,语音通话,视频直播

发送数据
1、创建返送端的DatagramSocket对象
2、数据打包DatagramPacket
3、发送数据
4、释放资源

接收数据
1、创建接收端的DatagramSocket对象
2、接受打包好的数据
3、解析数据包
4、释放资源


UDP的三种通讯方式
1、单播---一个
2、组播---一组 组播地址：224.0.0.0~239.255.255.255（其中244.0.0.0~244.0.0.255为预留的组播地址）
3、广播---局域网里面的的所有主机  地址255.255.255.255













TCP协议:传输控制协议(连接成功才发送)
特点:面向连接的通信协议,速度慢,不限制大小,数据安全
应用场景:下载文件数据不能丢失
依靠IO流来进行通信,发送端--输出流  接收端--输入流

客户端
1、创建客户端Socket对象，与指定的服务器短链接
2、获取输出流，写数据
3、释放资源

服务器
1、创建服务器端的Socket对象（ServerSocket）
2、监听客户端链接，返回与一个Socket对象
3、获取输流，读数据，把数据显示在控制台
4、释放资源

三次握手---确保链接建立
1、客户端先发一次连接请求给服务器等待服务器确认（问 ）
2、然后后服务确认以后，给客户端一个响应的请求
3、客户端再次发送连接请求然后确认连接（真连接）




四次挥手--确保连接断开并且数据处理完毕
1、客户端向服务器发出取消连接的请求（问）
2、服务器向客户端返回一个响应表示收到取消连接的请求
3、服务器将数据处理完之后，再次向客户端发出响应，表明可以断开连接啦
4、客户端向服务器发出最后的取消连接的请求（真取消）